#pragma once
#include <opencv2/core/mat.hpp>

namespace Autodrive
{
    namespace SensorData
    {
        enum UltrasoundSensor
        {
            FRONT = 0,
            FRONT_RIGHT = 1,
            REAR = 2
        };

<<<<<<< HEAD
        double PULSES_PER_CM = 0.5;     //to be determined experimentally
        int ultrasound[] = { 0, 0, 0 }; // front, frontright, rear
        int infrared[] = { 0, 0, 0 };   // frontright, rearright, rear
=======
        double PULSES_PER_CM = 1; //TODO: to be determined experimentally
        int ultrasound[] = { 0, 0, 0 };
        int infrared[] = { 0, 0, 0 };
        int gyroHeading = 0;
        int razorHeading = 0;
>>>>>>> 6c45c84c7c2bab1e581c9731b77d7c4cfb458adb
        long encoderPulses = 0;
        
		// required for parking
        int irFrontRight = infrared[0];
        int irRear = infrared[1];
        int irRearRight = infrared[2];
        
        int usFront = ultrasound[0];
        int usFrontRight = ultrasound[1];
        int usRearRight = ultrasound[2];
        
		int currentSpeed = 0;
		int currentAngle = 0;
		// --------------------
		
        double encoderDistance()
        {
            return encoderPulses;
        }
        cv::Mat* image = 0;
    };

}
